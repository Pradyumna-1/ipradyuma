{"version":3,"file":"index-5c825526.js","sources":["../../src/styles/styledComponents.tsx","../../src/hooks/useDimentions.ts","../../src/utils/constants.ts","../../src/components/Home.tsx","../../src/utils/data.ts","../../src/motion/MotionStack.tsx","../../src/components/Skills.tsx","../../src/motion/MotionCard.tsx","../../src/components/Projects.tsx","../../src/components/Contact.tsx","../../src/components/About.tsx","../../src/motion/ScrollToTop.tsx","../../src/providers/ColorModeProvider.tsx","../../src/components/Footer.tsx","../../src/components/Layout.tsx","../../src/styles/theme.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import {\r\n  TooltipProps,\r\n  Tooltip,\r\n  tooltipClasses,\r\n  styled,\r\n  Avatar,\r\n} from \"@mui/material\"\r\n\r\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({}) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: \"#3e5060eb\",\r\n    color: \"#fff\",\r\n    fontSize: \"0.75rem\",\r\n  },\r\n}))\r\n\r\nexport const CustomAvatar = styled(Avatar)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  width: \"50px\",\r\n  height: \"50px\",\r\n}))\r\n\r\nexport const BlueSpan = styled(\"span\")(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  fontWeight: 600,\r\n}))\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useDimensions = (myRef: any) => {\r\n  const [dimensions, setDimensions] = useState({ height: 0, width: 0 })\r\n\r\n  useEffect(() => {\r\n    const getDimensions = () => ({\r\n      height: myRef.current.offsetHeight,\r\n      width: myRef.current.offsetWidth,\r\n    })\r\n\r\n    const handleResize = () => {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    if (myRef.current) {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [myRef])\r\n\r\n  return dimensions\r\n}\r\n","export const drawerWidth = 240\r\nexport const navItems = [\"home\", \"about\", \"skills\", \"projects\", \"contact\"]\r\nexport const githubProfile = \"https://github.com/Pradyumna-1\"\r\nexport const linkedInProfile = \"https://www.linkedin.com/in/pradyumnakumarnaik/\"\r\nexport const emailID = \"naik.kumarpradyumna@gmail.com\"\r\nexport const myAddress = \"Hyderabad, Telangana, India\"\r\nexport const myName = \"Pradyumna\"\r\n","// import Typography from \"@mui/material/Typography\"\r\n// import Grid from \"@mui/material/Grid\"\r\n// import { CommonProps } from \"../App.props\"\r\n// import Stack from \"@mui/material/Stack\"\r\n// import Box from \"@mui/material/Box\"\r\n// import Image from \"mui-image\"\r\n// import Button from \"@mui/material/Button\"\r\n// import { navItems } from \"../utils/constants\"\r\n// import { Typewriter } from \"react-simple-typewriter\"\r\n\r\n// const titles = [\r\n//   \"A Full Stack Developer\",\r\n//   \"A Java Full Stack Developer\"\r\n// ]\r\n\r\n// const Home = ({ secHeight, navID }: CommonProps) => {\r\n//   return (\r\n//     <section id={navID}>\r\n//       <Grid\r\n//         container\r\n//         sx={{\r\n//           minHeight: secHeight,\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <Grid item>\r\n//           <Stack\r\n//             direction={{ xs: \"column-reverse\", sm: \"row\" }}\r\n//             gap={{ xs: 6, sm: 2, md: 10 }}\r\n//             alignItems={\"center\"}\r\n//           >\r\n//             {/* Text Section */}\r\n//             <Box\r\n//               sx={{\r\n//                 textAlign: { xs: \"center\", sm: \"left\" },\r\n//                 flexShrink: 2,\r\n//               }}\r\n//             >\r\n//               <Typography\r\n//                 variant=\"h5\"\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   alignItems: \"center\",\r\n//                   gap: 1,\r\n//                   fontSize: { xs: \"1.25rem\", sm: \"1.5rem\" },\r\n//                   color: \"text.secondary\",\r\n//                 }}\r\n//               >\r\n//                 <span role=\"img\" aria-label=\"hi emoji\" className=\"wave\">\r\n//                   {String.fromCodePoint(0x1f44b)}\r\n//                 </span>\r\n//                 Hey\r\n//               </Typography>\r\n\r\n//               <Typography\r\n//                 variant=\"h3\"\r\n//                 sx={{\r\n//                   fontWeight: \"bold\",\r\n//                   color: \"#fff\",\r\n//                   mt: 2,\r\n//                   fontSize: { xs: \"2rem\", md: \"3rem\" },\r\n//                 }}\r\n//               >\r\n//                 I'm Pradyumna Kumar Naik\r\n//               </Typography>\r\n\r\n//               {/* Typewriter effect */}\r\n//               <Typography\r\n//                 component=\"span\"\r\n//                 sx={{\r\n//                   display: \"block\",\r\n//                   mt: 1,\r\n//                   fontSize: { xs: '1.125rem', md: '1.5rem' },\r\n//                   fontWeight: 500,\r\n//                   color: \"#8b5cf6\",\r\n//                   \"& .Typewriter__cursor\": {\r\n//                     color: '#8b5cf6',\r\n//                   },\r\n//                 }}\r\n//               >\r\n//                 <Typewriter\r\n//                   words={titles}\r\n//                   loop\r\n//                   cursor\r\n//                   cursorStyle=\"|\"\r\n//                   typeSpeed={50}\r\n//                   deleteSpeed={50}\r\n//                   delaySpeed={1000}\r\n//                 />\r\n//               </Typography>\r\n\r\n//               {/* Contact Button */}\r\n//               <Button\r\n//                 size=\"large\"\r\n//                 sx={{\r\n//                   mt: 3,\r\n//                   backgroundImage:\r\n//                     \"linear-gradient(to right, #00C0FD 0%, #E70FAA 51%, #00C0FD 100%)\",\r\n//                   transition: \"0.5s\",\r\n//                   backgroundSize: \"200% auto\",\r\n//                   color: \"#fff\",\r\n//                   typography: \"h6\",\r\n//                   \"&:hover\": {\r\n//                     backgroundPosition: \"right center\",\r\n//                   },\r\n//                 }}\r\n//                 href={\"#\" + navItems[4]}\r\n//               >\r\n//                 Contact Me\r\n//               </Button>\r\n//             </Box>\r\n\r\n//             {/* Profile Image Section */}\r\n//             <Box\r\n//               sx={{\r\n//                 position: \"relative\",\r\n//                 width: { xs: 220, md: 250 },\r\n//                 height: { xs: 220, md: 250 },\r\n//                 borderRadius: \"50%\",\r\n//                 \"&::before,&::after\": {\r\n//                   content: '\" \"',\r\n//                   position: \"absolute\",\r\n//                   inset: \"-10px\",\r\n//                   borderRadius: \"inherit\",\r\n//                   background: \"linear-gradient(#00C0FD, #E70FAA)\",\r\n//                   zIndex: -1,\r\n//                   animation: \"spin 4s linear infinite\",\r\n//                 },\r\n//                 \"&::after\": { filter: \"blur(16px)\" },\r\n//               }}\r\n//             >\r\n//               <Image\r\n//                 alt=\"Pradyumna Kumar Naik\"\r\n//                 src=\"/profile-pic.png\"\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   height: \"100%\",\r\n//                   borderRadius: \"50%\",\r\n//                   objectFit: \"cover\",\r\n//                 }}\r\n//               />\r\n//             </Box>\r\n//           </Stack>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </section>\r\n//   )\r\n// }\r\n\r\n// export default Home\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport { CommonProps } from \"../App.props\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Box from \"@mui/material/Box\"\r\nimport Image from \"mui-image\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { navItems } from \"../utils/constants\"\r\nimport { Typewriter } from \"react-simple-typewriter\"\r\n\r\nconst titles = [\r\n  \"Full Stack Developer\",\r\n  \"Java Full Stack Developer\"\r\n \r\n]\r\n\r\nconst Home = ({ secHeight, navID }: CommonProps) => {\r\n  return (\r\n    <section id={navID}>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          minHeight: secHeight,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Grid item>\r\n          <Stack\r\n            direction={{ xs: \"column-reverse\", sm: \"row\" }}\r\n            gap={{ xs: 6, sm: 2, md: 10 }}\r\n            alignItems={\"center\"}\r\n          >\r\n            {/* ========== Left Side Content ========== */}\r\n            <Box\r\n              sx={{\r\n                textAlign: { xs: \"center\", sm: \"left\" },\r\n                flexShrink: 2,\r\n              }}\r\n            >\r\n              {/* Hey ðŸ‘‹ */}\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  gap: 1,\r\n                  color: \"#facc15\", // amber-400\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                <span role=\"img\" aria-label=\"hi emoji\">ðŸ‘‹</span> Hey\r\n              </Typography>\r\n\r\n              {/* Name with hidden extra spacing */}\r\n              <Typography\r\n                variant=\"h2\"\r\n                sx={{\r\n                  fontWeight: 800,\r\n                  // color: \"#fff\",\r\n                  mt: 1.5,\r\n                  fontSize: { xs: \"2.5rem\", sm: \"3rem\", md: \"3.5rem\" },\r\n                }}\r\n              >\r\n                I'm Pradyumna\r\n                <Box component=\"span\" sx={{ visibility: \"hidden\" }}>\r\n                  {\" \"}Kumar Naik\r\n                </Box>\r\n              </Typography>\r\n\r\n              {/* Animated Typewriter Line */}\r\n              <Typography\r\n                sx={{\r\n                  mt: 2,\r\n                  fontSize: { xs: \"1.2rem\", sm: \"1.5rem\" },\r\n                  fontWeight: 500,\r\n                  // color: \"#ffffff\",\r\n                }}\r\n              >\r\n                I am a{\" \"}\r\n                <Box\r\n                  component=\"span\"\r\n                  sx={{ color: \"#a855f7\" }} // violet-500\r\n                >\r\n                  <Typewriter\r\n                    words={titles}\r\n                    loop\r\n                    cursor\r\n                    cursorStyle=\"|\"\r\n                    typeSpeed={60}\r\n                    deleteSpeed={40}\r\n                    delaySpeed={1200}\r\n                  />\r\n                </Box>\r\n              </Typography>\r\n\r\n              {/* Description */}\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{\r\n                  mt: 2,\r\n                  maxWidth: 500,\r\n                  // color: \"#cbd5e1\", // slate-300\r\n                  fontSize: { xs: \"0.95rem\", sm: \"1rem\" },\r\n                }}\r\n              >\r\n                I focus on building scalable and efficient web applications\r\n                that are clean, user-friendly, and built with best practices\r\n                in mind. I love solving real-world problems through code.\r\n              </Typography>\r\n\r\n              {/* Contact Button */}\r\n              <Button\r\n                size=\"large\"\r\n                sx={{\r\n                  mt: 3,\r\n                  backgroundColor: \"#8b5cf6\",\r\n                  color: \"#fff\",\r\n                  textTransform: \"none\",\r\n                  fontWeight: 600,\r\n                  borderRadius: \"8px\",\r\n                  px: 3,\r\n                  py: 1.2,\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#7c3aed\",\r\n                  },\r\n                }}\r\n                href={\"#\" + navItems[4]}\r\n              >\r\n                Contact Me\r\n              </Button>\r\n            </Box>\r\n\r\n            {/* ========== Profile Image with Gradient Ring ========== */}\r\n            <Box\r\n              sx={{\r\n                position: \"relative\",\r\n                width: { xs: 220, md: 260 },\r\n                height: { xs: 220, md: 260 },\r\n                borderRadius: \"50%\",\r\n                \"&::before, &::after\": {\r\n                  content: '\"\"',\r\n                  position: \"absolute\",\r\n                  inset: \"-10px\",\r\n                  borderRadius: \"inherit\",\r\n                  background: \"linear-gradient(135deg, #00C0FD, #E70FAA)\",\r\n                  zIndex: -1,\r\n                  animation: \"spin 4s linear infinite\",\r\n                },\r\n                \"&::after\": {\r\n                  filter: \"blur(16px)\",\r\n                },\r\n              }}\r\n            >\r\n              <Image\r\n                alt=\"Pradyumna\"\r\n                src=\"/profile-pic.png\" // <-- Your image here\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  borderRadius: \"50%\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </Box>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Animation keyframes */}\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { About, Project, Skill } from \"../App.props\"\r\nimport { githubProfile } from \"./constants\"\r\n\r\nexport const skillData: Skill[] = [\r\n  { name: \"HTML\", imgURL: \"/icons_html.svg\" },\r\n  { name: \"CSS\", imgURL: \"/icons_css.svg\" },\r\n  { name: \"Javascript\", imgURL: \"/icons_js.svg\" },\r\n  { name: \"React\", imgURL: \"/logos_react.svg\" },\r\n  // { name: \"Next.js\", imgURL: \"/logo_next.svg\" },\r\n  { name: \"Java\", imgURL: \"/logo_java.png\" },\r\n\r\n  { name: \"SQL\", imgURL: \"/sql.png\" },\r\n  {name:\"Tailwind CSS\",imgURL:\"tailwind-css.svg\"},\r\n  { name: \"Redux\", imgURL: \"/redux-color.svg\" },\r\n  { name: \"Postman\", imgURL: \"/postman.svg\" },\r\n  { name: \"Material UI\", imgURL: \"/logo_mui.svg\" },\r\n  // { name: \"React Query\", imgURL: \"/react-query.svg\" },\r\n  { name: \"Git\", imgURL: \"/logos_git.svg\" },\r\n  { name: \"GitHub\", imgURL: \"/GitHub.png\" },\r\n  { name: \"Firebase\", imgURL: \"/Firebase.svg\" },\r\n  { name: \"Bootstrap\", imgURL: \"/logos_bootstrap.svg\" },\r\n  { name: \"MongoDB\", imgURL: \"/MongoDB.svg\" },\r\n]\r\n\r\nexport const projectData: Project[] = [\r\n  {\r\n    name: \"Nilkanthmart | E-Commerce App\",\r\n    description:\r\n      \"It is an e-commerce web application made using Next.js, Material UI and Redux Toolkit. Customers can browse products, add items to the cart, adjust quantities, remove products, apply coupon codes, place orders, and view order history.\",\r\n    projectURL: \"https://nilkanthmart-ecommerce.vercel.app/\",\r\n    githubURL: `${githubProfile}/ecommerce-app`,\r\n    imgURL: \"/ecommerce-app.png\",\r\n  },\r\n  {\r\n    name: \"PokÃ©dex\",\r\n    description:\r\n      \"A pokedex website that allows users to search and view information about various PokÃ©mon characters. A fuzzy search feature is present on the home page. User can view more details by clicking on the particular pokÃ©mon.\",\r\n    projectURL: \"https://my-pokedex-nilkanth.vercel.app/\",\r\n    githubURL: `${githubProfile}/my-pokedex`,\r\n    imgURL: \"/pokedex.png\",\r\n  },\r\n  {\r\n    name: \"Pizzeria\",\r\n    description:\r\n      \"Pizzeria is a MEAN Stack web application, where users order pizza online. Users can choose from the existing menu and order pizzas, also they can also customize their pizza by choosing ingredients.\",\r\n    projectURL: \"\",\r\n    githubURL: `${githubProfile}/Pizzeria`,\r\n    imgURL: \"/pizzeria.jpg\",\r\n  },\r\n]\r\n\r\nexport const experience = (\r\n  (new Date().getTime() - new Date(\"2020-12-04\").getTime()) /\r\n  (1000 * 60 * 60 * 24 * 365.25)\r\n).toLocaleString(\"en\", {\r\n  maximumFractionDigits: 2,\r\n  style: \"unit\",\r\n  unit: \"year\",\r\n  unitDisplay: \"long\",\r\n})\r\n\r\nexport const aboutData: About = {\r\n  badges: [\r\n    {\r\n      imgURL: \"/aws-certified-cloud-practitioner.png\",\r\n      badgeURL:\r\n        \"https://www.credly.com/badges/41330447-cc91-4cab-b2ce-82d29552d72f/public_url\",\r\n    },\r\n    {\r\n      imgURL: \"/microsoft-certified-power-platform-fundamentals.png\",\r\n      badgeURL:\r\n        \"https://www.credly.com/badges/1cb3e5da-1a8a-4c9a-81d0-aeb9b2a473f5/public_url\",\r\n    },\r\n  ],\r\n  education: {\r\n    title: \"Bachelor Of Technology in Computer Science and Engineering\",\r\n    grade: \"8.1 CGPA\",\r\n    subtitle: \"From Government College of Engineering Kalahandi, Bhawanipatna\",\r\n  },\r\n}\r\n","import Stack, { StackProps } from \"@mui/material/Stack\"\r\nimport { m } from \"framer-motion\"\r\nimport React from \"react\"\r\n\r\nconst Component = React.forwardRef((props: StackProps, ref: any) => (\r\n  <Stack ref={ref} {...props} />\r\n))\r\n\r\nconst MotionStack = m(Component)\r\n\r\nexport default MotionStack\r\n","import { CommonProps } from \"../App.props\"\r\nimport { skillData } from \"../utils/data\"\r\nimport MotionStack from \"../motion/MotionStack\"\r\nimport { BlueSpan } from \"../styles/styledComponents\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Box from \"@mui/material/Box\"\r\nimport { Variants } from \"framer-motion\"\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\"\r\nimport { Theme } from \"@mui/material/styles\"\r\n\r\nconst Skills = ({ secHeight, navID }: CommonProps) => {\r\n  const isSmallScreen = useMediaQuery((theme: Theme) =>\r\n    theme.breakpoints.down(\"sm\")\r\n  )\r\n  let variants: Variants = {\r\n    initial: { opacity: 0, y: 20, x: -20 },\r\n    whileInView: (i) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      x: 0,\r\n      transition: { delay: i * 0.2, duration: isSmallScreen ? 0.02 : 0.5 },\r\n    }),\r\n    whileHover: {\r\n      scale: 1.05,\r\n      transition: { duration: 0.3 },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <section id={navID}>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          minHeight: secHeight,\r\n          alignContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Grid item xs={12} py={3}>\r\n          <Typography variant=\"h4\" textAlign={\"center\"}>\r\n            My <BlueSpan>Skills</BlueSpan>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container spacing={2}>\r\n          {skillData?.map(({ name, imgURL }, i) => (\r\n            <Grid item key={name} xs={6} sm={3} lg={2}>\r\n              <MotionStack\r\n                gap={1}\r\n                sx={{\r\n                  height: 1,\r\n                  p: 1,\r\n                  \"&:hover\": {\r\n                    boxShadow: (theme) =>\r\n                      `0px 0px 4px 4px ${theme.palette.primary.main}`,\r\n                  },\r\n                }}\r\n                custom={i}\r\n                variants={variants}\r\n                initial=\"initial\"\r\n                whileInView=\"whileInView\"\r\n                whileHover=\"whileHover\"\r\n                viewport={{ once: true, amount: 0.5 }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    height: 75,\r\n                    width: 1,\r\n                    p: 1,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Box\r\n                    component={\"img\"}\r\n                    sx={{\r\n                      maxInlineSize: \"80%\",\r\n                      blockSize: \"auto\",\r\n                      objectFit: \"contain\",\r\n                    }}\r\n                    src={imgURL}\r\n                    alt={name}\r\n                  />\r\n                </Box>\r\n                <Typography variant=\"h6\" textAlign={\"center\"}>\r\n                  {name}\r\n                </Typography>\r\n              </MotionStack>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import Card, { CardProps } from \"@mui/material/Card\"\r\nimport { m } from \"framer-motion\"\r\nimport React from \"react\"\r\n\r\nconst Component = React.forwardRef((props: CardProps, ref: any) => (\r\n  <Card ref={ref} {...props} />\r\n))\r\n\r\nconst MotionCard = m(Component)\r\n\r\nexport default MotionCard\r\n","import { CommonProps } from \"../App.props\"\r\nimport CardActions from \"@mui/material/CardActions\"\r\nimport CardContent from \"@mui/material/CardContent\"\r\nimport Button from \"@mui/material/Button\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { projectData } from \"../utils/data\"\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\"\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\"\r\nimport { BlueSpan } from \"../styles/styledComponents\"\r\nimport MotionCard from \"../motion/MotionCard\"\r\nimport { Variants, m } from \"framer-motion\"\r\nimport Box from \"@mui/material/Box\"\r\n\r\nconst Projects = ({ secHeight, navID }: CommonProps) => {\r\n  let imgVariants: Variants = {\r\n    initial: { x: -100, opacity: 0 },\r\n    whileInView: {\r\n      x: 0,\r\n      opacity: 1,\r\n      rotate: [0, 10, 0],\r\n      transition: { type: \"spring\" },\r\n    },\r\n  }\r\n  let textVariants: Variants = {\r\n    initial: { y: 100, opacity: 0 },\r\n    whileInView: {\r\n      y: 0,\r\n      opacity: 1,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <section id={navID}>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          minHeight: secHeight,\r\n          alignContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Grid item xs={12} py={3}>\r\n          <Typography variant=\"h4\" textAlign={\"center\"}>\r\n            Personal <BlueSpan>Projects</BlueSpan>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container spacing={5}>\r\n          {projectData?.map(\r\n            ({ name, description, githubURL, projectURL, imgURL }, i) => (\r\n              <Grid item key={name} xs={12} sm={6} md={4}>\r\n                <MotionCard\r\n                  initial=\"initial\"\r\n                  whileInView=\"whileInView\"\r\n                  viewport={{ once: true, amount: 0.3 }}\r\n                  transition={{ staggerChildren: 0.5 }}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    height: 1,\r\n                    flexDirection: \"column\",\r\n                    \"&:hover\": {\r\n                      boxShadow: (theme) =>\r\n                        `0px 0px 8px 8px ${theme.palette.primary.main}`,\r\n                      transform: \"scale(1.05)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <Box\r\n                    component={m.img}\r\n                    sx={{ width: 1, aspectRatio: \"2.2\" }}\r\n                    title={name}\r\n                    alt={name}\r\n                    src={imgURL}\r\n                    variants={imgVariants}\r\n                  />\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography\r\n                      component={m.h6}\r\n                      variants={textVariants}\r\n                      gutterBottom\r\n                      variant=\"h6\"\r\n                    >\r\n                      {name}\r\n                    </Typography>\r\n                    <Typography\r\n                      component={m.p}\r\n                      variants={textVariants}\r\n                      variant=\"body2\"\r\n                      color=\"text.secondary\"\r\n                    >\r\n                      {description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions sx={{ justifyContent: \"space-evenly\" }}>\r\n                    <Button\r\n                      disabled={!Boolean(projectURL)}\r\n                      href={projectURL}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener\"\r\n                      color=\"primary\"\r\n                      startIcon={<OpenInNewIcon />}\r\n                    >\r\n                      Live Preview\r\n                    </Button>\r\n                    <Button\r\n                      href={githubURL}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener\"\r\n                      color=\"primary\"\r\n                      startIcon={<GitHubIcon />}\r\n                    >\r\n                      View Code\r\n                    </Button>\r\n                  </CardActions>\r\n                </MotionCard>\r\n              </Grid>\r\n            )\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import Grid from \"@mui/material/Grid\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\"\r\nimport ListItemText from \"@mui/material/ListItemText\"\r\nimport { CommonProps } from \"../App.props\"\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\"\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\"\r\nimport EmailIcon from \"@mui/icons-material/Email\"\r\nimport { emailID, linkedInProfile, myAddress } from \"../utils/constants\"\r\nimport { BlueSpan, CustomAvatar } from \"../styles/styledComponents\"\r\nimport { Variants, m } from \"framer-motion\"\r\nimport ListItemButton from \"@mui/material/ListItemButton\"\r\nimport List from \"@mui/material/List\"\r\n\r\nconst Contact = ({ secHeight, navID }: CommonProps) => {\r\n  let variants: Variants = {\r\n    initial: { opacity: 0, y: 20 },\r\n    whileInView: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <section id={navID}>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          minHeight: secHeight,\r\n          justifyContent: \"space-between\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignContent={\"center\"}\r\n          justifyContent={\"center\"}\r\n          flexGrow={1}\r\n        >\r\n          <Grid item xs={12} py={3} textAlign={\"center\"}>\r\n            <Typography variant=\"h4\">\r\n              Let's Get <BlueSpan>In Touch</BlueSpan>\r\n            </Typography>\r\n            <Typography mt={1}>\r\n              Have a <BlueSpan>Question</BlueSpan> on your mind??\r\n            </Typography>\r\n            <Typography>\r\n              Or want a copy of my <BlueSpan>rÃ©sumÃ©</BlueSpan>? Contact me using\r\n              below links.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item sx={{ bgcolor: \"background.paper\" }}>\r\n            <List\r\n              component={m.ul}\r\n              variants={variants}\r\n              initial=\"initial\"\r\n              whileInView={\"whileInView\"}\r\n              viewport={{ once: true, amount: 0.5 }}\r\n            >\r\n              <ListItemButton\r\n                component={m.a}\r\n                variants={variants}\r\n                href={`mailto:${emailID}`}\r\n                sx={{\r\n                  border: 3,\r\n                  borderRadius: 2,\r\n                  borderColor: \"transparent\",\r\n                  \"&:hover\": {\r\n                    borderColor: \"primary.main\",\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <CustomAvatar>\r\n                    <EmailIcon fontSize=\"large\" />\r\n                  </CustomAvatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{ pl: 2, variant: \"h6\" }}\r\n                  primary={\"Send an Email\"}\r\n                />\r\n              </ListItemButton>\r\n              <ListItemButton\r\n                component={m.a}\r\n                variants={variants}\r\n                href={linkedInProfile}\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n                sx={{\r\n                  border: 3,\r\n                  borderRadius: 2,\r\n                  borderColor: \"transparent\",\r\n                  \"&:hover\": {\r\n                    borderColor: \"primary.main\",\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <CustomAvatar>\r\n                    <LinkedInIcon fontSize=\"large\" />\r\n                  </CustomAvatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{ pl: 2, variant: \"h6\" }}\r\n                  primary=\"Connect on LinkedIn\"\r\n                />\r\n              </ListItemButton>\r\n              <ListItemButton\r\n                component={m.a}\r\n                variants={variants}\r\n                sx={{\r\n                  border: 3,\r\n                  borderRadius: 2,\r\n                  borderColor: \"transparent\",\r\n                  pointerEvents: \"none\",\r\n                  \"&:hover\": {\r\n                    borderColor: \"primary.main\",\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <CustomAvatar>\r\n                    <LocationOnIcon fontSize=\"large\" />\r\n                  </CustomAvatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{ pl: 2, variant: \"h6\" }}\r\n                  primary={myAddress}\r\n                />\r\n              </ListItemButton>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import Grid from \"@mui/material/Grid\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Box from \"@mui/material/Box\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport Link from \"@mui/material/Link\"\r\nimport { CommonProps } from \"../App.props\"\r\nimport { BlueSpan } from \"../styles/styledComponents\"\r\nimport { aboutData, experience } from \"../utils/data\"\r\nimport SchoolIcon from \"@mui/icons-material/School\"\r\nimport WorkspacePremiumIcon from \"@mui/icons-material/WorkspacePremium\"\r\nimport { Player } from \"@lottiefiles/react-lottie-player\"\r\nimport { Variants, m } from \"framer-motion\"\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\"\r\nimport { Theme } from \"@mui/material/styles\"\r\n\r\nconst About = ({ secHeight, navID }: CommonProps) => {\r\n  const isSmallScreen = useMediaQuery((theme: Theme) =>\r\n    theme.breakpoints.down(\"sm\")\r\n  )\r\n  let variants: Variants = isSmallScreen\r\n    ? {\r\n        initial: { opacity: 0 },\r\n        whileInView: { opacity: 1 },\r\n      }\r\n    : {\r\n        initial: { opacity: 0, x: 50 },\r\n        whileInView: {\r\n          opacity: 1,\r\n          x: 0,\r\n          transition: { delay: 0.3 },\r\n        },\r\n      }\r\n\r\n  return (\r\n    <section id={navID}>\r\n      <Grid container sx={{ minHeight: secHeight, alignContent: \"flex-start\" }}>\r\n        <Grid item xs={12} py={3}>\r\n          <Typography variant=\"h4\" textAlign={\"center\"}>\r\n            Let Me <BlueSpan>Introduce Myself</BlueSpan>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          <Player\r\n            src={\r\n              \"https://lottie.host/49f9657b-0967-40e8-a5cf-4a8835262ff8/3DV7zJE7j0.json\"\r\n            }\r\n            autoplay\r\n            loop\r\n            className=\"lottie-player\"\r\n          />\r\n        </Grid>\r\n        <Grid item md={7} overflow={\"hidden\"}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            component={m.p}\r\n            variants={variants}\r\n            initial=\"initial\"\r\n            whileInView=\"whileInView\"\r\n            viewport={{ once: true }}\r\n          >\r\n            <b>\r\n              Hey I'm Nilkanth Patadiya, a Front End Developer with {experience}{\" \"}\r\n              of experience in building user-friendly and responsive web\r\n              applications using React and other modern technologies.\r\n            </b>{\" \"}\r\n            Familiar with Agile methodologies, version control systems and\r\n            debugging techniques. Since joining{\" \"}\r\n            <b>Accenture in December 2020</b>, I have successfully completed\r\n            multiple projects for clients across various domains and industries,\r\n            delivering high-quality solutions that meet their needs and\r\n            expectations. My hobbies include reading, listening to music,\r\n            gaming, and cycling when I have spare time.\r\n          </Typography>\r\n          <Stack\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            gap={{ xs: 2, md: 3 }}\r\n            pt={2}\r\n          >\r\n            <Box sx={{ flex: 1 }}>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: 1 }}>\r\n                <Box\r\n                  sx={{\r\n                    display: \"inline-flex\",\r\n                    gap: 1,\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <SchoolIcon color=\"primary\" fontSize=\"large\" />\r\n                  <Typography variant=\"h6\">Education</Typography>\r\n                </Box>\r\n                <Typography fontWeight={\"bold\"} gutterBottom>\r\n                  {aboutData?.education?.title} |{\" \"}\r\n                  <BlueSpan>{aboutData?.education?.grade}</BlueSpan>\r\n                </Typography>\r\n                <Typography>\r\n                  <Link\r\n                    color={\"inherit\"}\r\n                    underline=\"hover\"\r\n                    href=\"https://www.gcekbpatna.ac.in/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                  >\r\n                    {aboutData?.education?.subtitle}\r\n                  </Link>\r\n                </Typography>\r\n              </Paper>\r\n            </Box>\r\n            {/* <Box sx={{ flex: 1 }}>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: 1 }}>\r\n                <Box\r\n                  sx={{\r\n                    display: \"inline-flex\",\r\n                    gap: 0.5,\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <WorkspacePremiumIcon color=\"primary\" fontSize=\"large\" />\r\n                  <Typography variant=\"h6\">Certifications</Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-evenly\",\r\n                  }}\r\n                >\r\n                  {aboutData?.badges?.map(({ imgURL, badgeURL }, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      underline=\"none\"\r\n                      href={badgeURL}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener\"\r\n                    >\r\n                      <Box\r\n                        component={\"img\"}\r\n                        sx={{\r\n                          width: 100,\r\n                          height: \"auto\",\r\n                        }}\r\n                        src={imgURL}\r\n                        alt={imgURL?.split(\".\")?.[0]}\r\n                      />\r\n                    </Link>\r\n                  ))}\r\n                </Box>\r\n              </Paper>\r\n            </Box> */}\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import Box from \"@mui/material/Box\"\r\nimport Fade from \"@mui/material/Fade\"\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\"\r\n\r\nfunction ScrollToTop({ children }: React.PropsWithChildren<{}>) {\r\n  const trigger = useScrollTrigger({\r\n    target: window,\r\n    disableHysteresis: true,\r\n    threshold: 200,\r\n  })\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const anchor = (\r\n      (event.target as HTMLDivElement).ownerDocument || document\r\n    ).querySelector(\"#home\")\r\n\r\n    console.log(anchor)\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        block: \"center\",\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fade in={trigger}>\r\n      <Box\r\n        onClick={handleClick}\r\n        role=\"presentation\"\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: { xs: 75, sm: 25 },\r\n          right: 25,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { PaletteMode } from \"@mui/material\"\r\nimport React, { PropsWithChildren } from \"react\"\r\nimport { ColorModeProviderProps } from \"../App.props\"\r\nconst ColorModeContext = React.createContext<ColorModeProviderProps | null>(null)\r\n\r\nconst ColorModeProvider = ({ children }: PropsWithChildren<unknown>) => {\r\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\")\r\n  return (\r\n    <ColorModeContext.Provider\r\n      value={{\r\n        mode,\r\n        // The dark mode switch would invoke this method\r\n        toggleColorMode: () =>\r\n          setMode((prevMode: PaletteMode) => (prevMode === \"light\" ? \"dark\" : \"light\")),\r\n      }}\r\n    >\r\n      {children}\r\n    </ColorModeContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useColorMode = () => {\r\n  const context = React.useContext(ColorModeContext)\r\n  if (!context) {\r\n    throw new Error(\"useColorMode must be used within ColorModeProvider\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport default ColorModeProvider\r\n","import Typography from \"@mui/material/Typography\"\r\nimport Divider from \"@mui/material/Divider\"\r\nimport { BlueSpan } from \"../styles/styledComponents\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Divider />\r\n      <Typography\r\n        textAlign={\"center\"}\r\n        sx={{ textShadow: \"1px 1px black\", p: 2 }}\r\n      >\r\n        Made with &#x1F496; by <BlueSpan>Pradyumna Kumar Naik</BlueSpan>\r\n      </Typography>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import AppBar from \"@mui/material/AppBar\"\r\nimport Button from \"@mui/material/Button\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Toolbar from \"@mui/material/Toolbar\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React from \"react\"\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\"\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\"\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\"\r\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\"\r\nimport MenuIcon from \"@mui/icons-material/Menu\"\r\nimport HomeIcon from \"@mui/icons-material/Home\"\r\nimport HandymanIcon from \"@mui/icons-material/Handyman\"\r\nimport PersonIcon from \"@mui/icons-material/Person\"\r\nimport LayersIcon from \"@mui/icons-material/Layers\"\r\nimport CallIcon from \"@mui/icons-material/Call\"\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\"\r\nimport { LightTooltip } from \"../styles/styledComponents\"\r\nimport { useDimensions } from \"../hooks/useDimentions\"\r\nimport Home from \"./Home\"\r\nimport Skills from \"./Skills\"\r\nimport Projects from \"./Projects\"\r\nimport Contact from \"./Contact\"\r\nimport About from \"./About\"\r\nimport ScrollToTop from \"../motion/ScrollToTop\"\r\nimport {\r\n  navItems,\r\n  drawerWidth,\r\n  linkedInProfile,\r\n  githubProfile,\r\n  myName,\r\n} from \"../utils/constants\"\r\nimport { useColorMode } from \"../providers/ColorModeProvider\"\r\nimport { useTheme } from \"@mui/material/styles\"\r\nimport Box from \"@mui/material/Box\"\r\nimport Drawer from \"@mui/material/Drawer\"\r\nimport Container from \"@mui/material/Container\"\r\nimport Fab from \"@mui/material/Fab\"\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\"\r\nimport Footer from \"./Footer\"\r\n\r\nconst Layout = () => {\r\n  const navIcons = [\r\n    <HomeIcon />,\r\n    <PersonIcon />,\r\n    <HandymanIcon />,\r\n    <LayersIcon />,\r\n    <CallIcon />,\r\n  ]\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false)\r\n  const { toggleColorMode } = useColorMode()\r\n  const theme = useTheme()\r\n  const isDarkTheme = theme.palette.mode === \"dark\"\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"))\r\n  const appBarRef = React.useRef(null)\r\n\r\n  let { height } = useDimensions(appBarRef)\r\n  let secHeight = React.useMemo(() => `calc(100vh - ${height}px)`, [height])\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState)\r\n  }\r\n  return (\r\n    <Box sx={{ width: 1 }}>\r\n      {/*Sidebar Navigation For small screens */}\r\n      <Box component=\"nav\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"initial\", md: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          <Stack\r\n            spacing={3}\r\n            sx={{\r\n              py: 4,\r\n              px: 2,\r\n              width: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {navItems.map((item, i) => (\r\n              <Button\r\n                key={i}\r\n                onClick={handleDrawerToggle}\r\n                href={`#${item.toLowerCase()}`}\r\n                variant=\"outlined\"\r\n                startIcon={navIcons[i]}\r\n                sx={{ width: 0.7, borderRadius: 20, py: 1 }}\r\n              >\r\n                {item}\r\n              </Button>\r\n            ))}\r\n          </Stack>\r\n        </Drawer>\r\n      </Box>\r\n      <Stack sx={{ width: 1 }}>\r\n        {/* Header Navigation For large screens */}\r\n        <AppBar\r\n          position=\"sticky\"\r\n          color=\"transparent\"\r\n          component=\"nav\"\r\n          ref={appBarRef}\r\n          sx={{ backdropFilter: \"blur(14px)\", px: { xs: 0, md: 4 } }}\r\n        >\r\n          <Toolbar sx={{ justifyContent: \"space-between\" }}>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"start\"\r\n                onClick={handleDrawerToggle}\r\n                sx={{ mr: { xs: 0, sm: 2 }, display: { md: \"none\" } }}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h4\" fontFamily={\"iceland\"} color=\"primary\">\r\n                {isSmallScreen ? myName.split(\" \")[0] : myName}\r\n              </Typography>\r\n              <Stack\r\n                direction={\"row\"}\r\n                spacing={1}\r\n                ml={3}\r\n                sx={{ display: { xs: \"none\", md: \"initial\" } }}\r\n              >\r\n                {navItems.map((item, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    href={`#${item}`}\r\n                    sx={{ fontSize: \"1rem\" }}\r\n                  >\r\n                    {item}\r\n                  </Button>\r\n                ))}\r\n              </Stack>\r\n            </Box>\r\n            <Stack direction={\"row\"} spacing={1}>\r\n              <LightTooltip title=\"LinkedIn Profile\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener\"\r\n                  href={linkedInProfile}\r\n                >\r\n                  <LinkedInIcon />\r\n                </IconButton>\r\n              </LightTooltip>\r\n              <LightTooltip title=\"Github Profile\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  href={githubProfile}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener\"\r\n                >\r\n                  <GitHubIcon />\r\n                </IconButton>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                title={`Switch to ${isDarkTheme ? \"light\" : \"dark\"} theme`}\r\n              >\r\n                <IconButton color=\"primary\" onClick={toggleColorMode}>\r\n                  {isDarkTheme ? <DarkModeOutlinedIcon /> : <LightModeIcon />}\r\n                </IconButton>\r\n              </LightTooltip>\r\n            </Stack>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* Main Content */}\r\n        <Container\r\n          maxWidth={\"xl\"}\r\n          sx={{ \"&>section\": { scrollMarginTop: `${height}px` } }}\r\n        >\r\n          <Home secHeight={secHeight} navID={navItems[0]} />\r\n          <About secHeight={secHeight} navID={navItems[1]} />\r\n          <Skills secHeight={secHeight} navID={navItems[2]} />\r\n          <Projects secHeight={secHeight} navID={navItems[3]} />\r\n          <Contact secHeight={secHeight} navID={navItems[4]} />\r\n          <ScrollToTop>\r\n            <Fab\r\n              size=\"medium\"\r\n              aria-label=\"scroll back to top\"\r\n              title=\"Scroll to Top\"\r\n              color=\"primary\"\r\n            >\r\n              <ArrowUpwardIcon />\r\n            </Fab>\r\n          </ScrollToTop>\r\n        </Container>\r\n        {/* Footer */}\r\n        <Footer />\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { PaletteMode, ThemeOptions } from \"@mui/material\"\r\n\r\nexport const getDesignTokens = (mode: PaletteMode): ThemeOptions => {\r\n  return {\r\n    palette: {\r\n      mode,\r\n      primary: { main: \"#3ea6ff\" },\r\n      ...(mode === \"light\"\r\n        ? {\r\n            // palette values for light mode\r\n            text: {\r\n              primary: \"#666666\",\r\n              secondary: \"#42446E\",\r\n            },\r\n          }\r\n        : {\r\n            // palette values for dark mode\r\n            background: {\r\n              default: \"#191919\",\r\n              paper: \"#191919\",\r\n            },\r\n            text: {\r\n              primary: \"#A7A7A7\",\r\n              secondary: \"#CCCCCC\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: \"Inter\",\r\n      h1: {\r\n        fontWeight: 700,\r\n      },\r\n      h2: {\r\n        fontWeight: 700,\r\n      },\r\n      h3: {\r\n        fontWeight: 700,\r\n      },\r\n      h4: {\r\n        fontWeight: 700,\r\n      },\r\n      h5: {\r\n        fontWeight: 700,\r\n      },\r\n      h6: {\r\n        fontWeight: 600,\r\n      },\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        styleOverrides: {\r\n          root: {\r\n            textTransform: \"capitalize\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }\r\n}\r\n","import {\r\n  createTheme,\r\n  CssBaseline,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n} from \"@mui/material\"\r\n\r\nimport Layout from \"./components/Layout\"\r\nimport React from \"react\"\r\nimport { getDesignTokens } from \"./styles/theme\"\r\nimport { useColorMode } from \"./providers/ColorModeProvider\"\r\n\r\nfunction App() {\r\n  const { mode } = useColorMode()\r\n  // Update the theme only if the mode changes\r\n  let theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode])\r\n  theme = responsiveFontSizes(theme, {\r\n    breakpoints: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\r\n  })\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline enableColorScheme />\r\n      <Layout />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom/client\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nimport ColorModeProvider from \"./providers/ColorModeProvider\"\r\nimport \"@fontsource/inter/300.css\"\r\nimport \"@fontsource/inter/400.css\"\r\nimport \"@fontsource/inter/500.css\"\r\nimport \"@fontsource/inter/700.css\"\r\nimport \"@fontsource/iceland\"\r\nimport { LazyMotion, domAnimation } from \"framer-motion\"\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <ColorModeProvider>\r\n      <LazyMotion features={domAnimation}>\r\n        <App />\r\n      </LazyMotion>\r\n    </ColorModeProvider>\r\n  </React.StrictMode>\r\n)\r\n"],"names":["LightTooltip","styled","className","props","jsx","Tooltip","tooltipClasses","CustomAvatar","Avatar","theme","BlueSpan","useDimensions","myRef","dimensions","setDimensions","useState","useEffect","getDimensions","handleResize","drawerWidth","navItems","githubProfile","linkedInProfile","emailID","myAddress","myName","titles","Home","secHeight","navID","jsxs","Grid","Stack","Box","Typography","Typewriter","Button","Image","skillData","projectData","experience","aboutData","Component","React","ref","MotionStack","m","Skills","isSmallScreen","useMediaQuery","variants","i","name","imgURL","Card","MotionCard","Projects","imgVariants","textVariants","description","githubURL","projectURL","CardContent","CardActions","OpenInNewIcon","GitHubIcon","Contact","List","ListItemButton","ListItemAvatar","EmailIcon","ListItemText","LinkedInIcon","LocationOnIcon","About","Player","Paper","SchoolIcon","_a","_b","Link","ScrollToTop","children","trigger","useScrollTrigger","Fade","event","anchor","ColorModeContext","ColorModeProvider","mode","setMode","prevMode","useColorMode","context","Footer","Divider","Layout","navIcons","HomeIcon","PersonIcon","HandymanIcon","LayersIcon","CallIcon","mobileOpen","setMobileOpen","toggleColorMode","useTheme","isDarkTheme","appBarRef","height","handleDrawerToggle","prevState","Drawer","item","AppBar","Toolbar","IconButton","MenuIcon","index","DarkModeOutlinedIcon","LightModeIcon","Container","Fab","ArrowUpwardIcon","getDesignTokens","App","createTheme","responsiveFontSizes","ThemeProvider","CssBaseline","ReactDOM","LazyMotion","domAnimation"],"mappings":"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"}